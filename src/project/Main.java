//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Terepasztal
//  @ File Name : Main.java
//  @ Date : 2017. 03. 17.
//  @ Author : 
//
//

package project;

import java.io.IOException;
import java.util.Scanner;

public class Main {
    public static int tabs = 0;

    public static void main(String[] args) {
        int b = 0;
        do {
            b = menuWrite();
            if (b < 1 || b > 6) {
                System.out.print("Ilyen parancs nem létezik!");
            }
            else {
                runSkeleton(b);
            }
        } while (b != 6);
    }

    public static int menuWrite() {
        System.out.print("\n \nMenü:" + "\n" +
                "1. Váltó állítása" + "\n" +
                "2. Alagút létrehozása" + "\n" +
                "3. Alagút törlése" + "\n" +
                "4. Vonat mozgatása" + "\n" +
                "5. Vonat hozzáadás" + "\n" +
                "6. Kilépés" + "\n" +"\n" +
                "? Adja meg a parancs kódját: "
        );
        Scanner sc = new Scanner(System.in);
        int a = 0;
        try {
            a = sc.nextInt();
        } catch (Exception e) {}
        return a;
    }

    public static void runSkeleton(int b) {
        switch (b) {
            case 1:
                System.out.println(b + ". Váltó állítása");
                changeSwitch();
                break;
            case 2:
                System.out.println(b + ". Alagút létrehozása");
                AddTunnelEntrance();
                break;
            case 3:
                System.out.println(b + ". Alagút törlése");
                RemoveTunnelEntrance();
                break;
            case 4:
                System.out.println(b + ". Vonat mozgatása");
                moveTrains();
                break;
            case 5:
                System.out.println(b + ". Vonat hozzáadása");
                // Ide add majd a hozzáadást
                break;
            case 6:
                System.out.println(b + ". Kilépés");
                break;
        }
    }

    public static void changeSwitch() {
        Switch s = new Switch(1, 1, null, null, null);
        s.changeOutput();
    }

    public static void moveTrains() {
        Model map = new Model();
        map.moveEngines();
    }
    
    public static void AddTunnelEntrance () {
        System.out.print("? 2.1 Hány alagút van a pályán?  0/1/2: ");
        int i = 0;
        try {
            i = Character.getNumericValue(System.in.read());
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (i == 0) {
            System.out.print("? 2.2 Érvényes helyre akarja építeni? I/N: ");
            char c = 0;
            try {
                System.in.read();
                c = (char) System.in.read();
                if (c == 'I' || c == 'i') {
                    TunnelEntrance te = new TunnelEntrance(0, 0, null, null, null);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (i == 1) {
            System.out.print("? 2.2 Érvényes helyre akarja építeni? I/N: ");
            char c = 0;
            try {
                System.in.read();
                c = (char) System.in.read();
                if (c == 'I' || c == 'i') {
                    TunnelEntrance test1 = new TunnelEntrance(0, 0, null, null, null);
                    TunnelEntrance test2 = new TunnelEntrance(0, 0, null, test1, null);
                    test1.setSecond(test1);
                    test1.changeOutput();
                    test2.changeOutput();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public static void RemoveTunnelEntrance(){
        TunnelEntrance test2 = new TunnelEntrance(0,0,null,null,null);
        TunnelEntrance test1 = new TunnelEntrance(0,0,null,null,null);
        System.out.print("? 3.1 Hány alagút van a pályán?  0/1/2: ");
        int i = 0;
        try {
            i = Character.getNumericValue(System.in.read());
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (i == 2) {
            test1.changeOutput();
        }
        if(i == 1){
            
        }
    }
}
